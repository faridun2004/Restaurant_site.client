@page "/employee/edit/{id}"
@inject IHttpAPIProvider _apiProvider
@using Restaurant_site.client.DTO
@using System.Net.Http.Json
@using Restaurant_site.client.Services
@inject NavigationManager _navigationManager

<PageTitle>Edit Employee</PageTitle>

<h3>Edit Employee</h3>
@if (employee == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form>
        <div class="form-group">
            <label for="firstName">First Name:</label>
            <input id="firstName" class="form-control" @bind="@employee.FirstName" required />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <input id="lastName" class="form-control" @bind="@employee.LastName" required />
        </div>
       @*  <div class="form-group">
            <label for="address">Address:</label>
            <input id="address" class="form-control" @bind="@employee.Address" required />
        </div>
        <div class="form-group">
            <label for="contactInfo">Contact Info:</label>
            <input id="contactInfo" class="form-control" @bind="@employee.ContactInfo" required />
        </div>
        <div class="form-group">
            <label for="responsibility">Responsibility:</label>
            <input id="responsibility" class="form-control" @bind="@employee.Responsibility" required />
        </div> *@
        <button type="button" class="btn btn-primary" @onclick="EditEmployees">Edit Employee</button>
    </form>
}
@code {
    [Parameter]
    public string Id { get; set; }
    EmployeeDTO employee;

    protected override async Task OnInitializedAsync()
    {
        (bool isSuccessStatusCode, employee, string message) = await _apiProvider.GetAsync<EmployeeDTO>($"employee/{Id}");
    }
    private async Task EditEmployees()
    {
        (bool isSuccessStatusCode, string createClient, string message) = await _apiProvider.PutAsync<string>($"employee/{Id}", employee);
        _navigationManager.NavigateTo("/employee");
    }
}
