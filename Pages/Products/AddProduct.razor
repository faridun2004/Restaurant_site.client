@page "/product/add"
@inject IHttpAPIProvider _apiProvider
@using Restaurant_site.client.DTO
@using System.Net.Http.Json
@using Restaurant_site.client.Services
@using System.Net.Http.Headers
@using System.Text.Json
@inject NavigationManager _navigationManager

<PageTitle>Add Product</PageTitle>

<form>
    <div class="form-group">
        <label for="name">Name:</label>
        <input id="name" class="form-control" @bind="@product.Name" required />
    </div>
    <div class="form-group">
        <label for="description">Description:</label>
        <input id="description" class="form-control" @bind="@product.Description" required />
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <input id="price" class="form-control" @bind="@product.Price" required />
    </div>
    <div class="form-group">
        <label for="image">Image:</label>
        <InputFile id="image" class="form-control" OnChange="HandleFileSelected" />
    </div>
    <br />
    <button type="button" class="btn btn-primary" @onclick="AddProducts">Add Product</button>
</form>

@code {
    ProductDTO product = new ProductDTO();

    private async Task AddProducts()
    {
        var (isSuccessStatusCode, createClient, message) = await _apiProvider.PostAsync<ProductDTO>("product", product);
        _navigationManager.NavigateTo("/product");
    }
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var content = new MultipartFormDataContent())
            {
                var fileContent = new StreamContent(file.OpenReadStream());
                fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
                content.Add(fileContent, "file", file.Name);

                var response = await _apiProvider.PostAsync<object>("product/upload-image", content);
                if (response.isSuccessStatusCode)
                {
                    var result = (JsonElement)response.result;
                    product.ImageUrl = result.GetProperty("Path").GetString();
                }
            }
        }
    }
}
